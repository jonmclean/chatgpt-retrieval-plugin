---
openapi: 3.0.2
info:
  title: FastAPI
  version: 0.1.0
paths:
  "/upsert-file":
    post:
      summary: Upsert File
      operationId: upsert_file_upsert_file_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Body_upsert_file_upsert_file_post"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UpsertResponse"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/upsert":
    post:
      summary: Upsert
      operationId: upsert_upsert_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpsertRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UpsertResponse"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/query":
    post:
      summary: Query Main
      operationId: query_main_query_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/QueryRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/QueryResponse"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/delete":
    delete:
      summary: Delete
      operationId: delete_delete_delete
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DeleteRequest"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DeleteResponse"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
components:
  schemas:
    Body_upsert_file_upsert_file_post:
      title: Body_upsert_file_upsert_file_post
      required:
        - file
      type: object
      properties:
        file:
          title: File
          type: string
          format: binary
        metadata:
          title: Metadata
          type: string
    DeleteRequest:
      title: DeleteRequest
      type: object
      properties:
        ids:
          title: Ids
          type: array
          items:
            type: string
        filter:
          "$ref": "#/components/schemas/DocumentMetadataFilter"
        delete_all:
          title: Delete All
          type: boolean
          default: false
    DeleteResponse:
      title: DeleteResponse
      required:
        - success
      type: object
      properties:
        success:
          title: Success
          type: boolean
    Document:
      title: Document
      required:
        - text
      type: object
      properties:
        id:
          title: Id
          type: string
        text:
          title: Text
          type: string
        metadata:
          "$ref": "#/components/schemas/DocumentMetadata"
    DocumentChunkMetadata:
      title: DocumentChunkMetadata
      type: object
      properties:
        source:
          "$ref": "#/components/schemas/Source"
        source_id:
          title: Source Id
          type: string
        url:
          title: Url
          type: string
        created_at:
          title: Created At
          type: string
        author:
          title: Author
          type: string
        document_id:
          title: Document Id
          type: string
    DocumentChunkWithScore:
      title: DocumentChunkWithScore
      required:
        - text
        - metadata
        - score
      type: object
      properties:
        id:
          title: Id
          type: string
        text:
          title: Text
          type: string
        metadata:
          "$ref": "#/components/schemas/DocumentChunkMetadata"
        embedding:
          title: Embedding
          type: array
          items:
            type: number
        score:
          title: Score
          type: number
    DocumentMetadata:
      title: DocumentMetadata
      type: object
      properties:
        source:
          "$ref": "#/components/schemas/Source"
        source_id:
          title: Source Id
          type: string
        url:
          title: Url
          type: string
        created_at:
          title: Created At
          type: string
        author:
          title: Author
          type: string
    DocumentMetadataFilter:
      title: DocumentMetadataFilter
      type: object
      properties:
        document_id:
          title: Document Id
          type: string
        source:
          "$ref": "#/components/schemas/Source"
        source_id:
          title: Source Id
          type: string
        author:
          title: Author
          type: string
        start_date:
          title: Start Date
          type: string
        end_date:
          title: End Date
          type: string
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            "$ref": "#/components/schemas/ValidationError"
    Query:
      title: Query
      required:
        - query
      type: object
      properties:
        query:
          title: Query
          type: string
        filter:
          "$ref": "#/components/schemas/DocumentMetadataFilter"
        top_k:
          title: Top K
          type: integer
          default: 3
    QueryRequest:
      title: QueryRequest
      required:
        - queries
      type: object
      properties:
        queries:
          title: Queries
          type: array
          items:
            "$ref": "#/components/schemas/Query"
    QueryResponse:
      title: QueryResponse
      required:
        - results
      type: object
      properties:
        results:
          title: Results
          type: array
          items:
            "$ref": "#/components/schemas/QueryResult"
    QueryResult:
      title: QueryResult
      required:
        - query
        - results
      type: object
      properties:
        query:
          title: Query
          type: string
        results:
          title: Results
          type: array
          items:
            "$ref": "#/components/schemas/DocumentChunkWithScore"
    Source:
      title: Source
      enum:
        - email
        - file
        - chat
      type: string
      description: An enumeration.
    UpsertRequest:
      title: UpsertRequest
      required:
        - documents
      type: object
      properties:
        documents:
          title: Documents
          type: array
          items:
            "$ref": "#/components/schemas/Document"
    UpsertResponse:
      title: UpsertResponse
      required:
        - ids
      type: object
      properties:
        ids:
          title: Ids
          type: array
          items:
            type: string
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
